name: publish

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Make all
        run: go build -o build/os-mfa src/os-mfa.go
      - name: Upload release binaries
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./build/os-mfa.go"]'

# name: goreleaser

# on:
#   push:
#     # run only against tags
#     tags:
#       - '*'

# permissions:
#   contents: write
#   # packages: write
#   # issues: write

# jobs:
#   goreleaser:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
#       - run: git fetch --force --tags
#       - uses: actions/setup-go@v3
#         with:
#           go-version: '>=1.19.1'
#           cache: true
#       # More assembly might be required: Docker logins, GPG, etc. It all depends
#       # on your needs.
#       - uses: goreleaser/goreleaser-action@v2
#         with:
#           # either 'goreleaser' (default) or 'goreleaser-pro'
#           distribution: goreleaser
#           version: latest
#           args: release --rm-dist
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
#           # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
